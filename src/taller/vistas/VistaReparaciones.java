/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package taller.vistas;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import taller.modelo.Aparatos;
import taller.modelo.AparatosData;
import taller.modelo.Clientes;
import taller.modelo.Conexion;
import taller.modelo.Reparaciones;
import taller.modelo.ReparacionesData;
import taller.modelo.Servicios;
import taller.modelo.ServiciosData;

    
/**
 *
 * @author tinch
 */
public class VistaReparaciones extends javax.swing.JInternalFrame {
     private Conexion conexion;
     private AparatosData ad;
     private ServiciosData sd;
     private DefaultTableModel modelo;
     private Clientes cliente;
     private ReparacionesData rd;
     
    /** Creates new form VistaEstadoYCosto */
    public VistaReparaciones() {
        try {
            initComponents();
            conexion = new Conexion();         
            sd = new ServiciosData(conexion);
            List<Servicios> lista = sd.obtenerServicios();
            for(Servicios it: lista){
                jcServicios.addItem(it);
            }
            modelo= new DefaultTableModel();   
            rd = new ReparacionesData(conexion);
            armarCabeceraTabla();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaReparaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jrPendientes = new javax.swing.JRadioButton();
        jrResueltos = new javax.swing.JRadioButton();
        jcServicios = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAparatos = new javax.swing.JTable();
        jbGuardar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 51));
        jLabel1.setText("Estado de los Aparatos");

        jrPendientes.setText("pendientes");
        jrPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrPendientesActionPerformed(evt);
            }
        });

        jrResueltos.setText("resueltos");
        jrResueltos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrResueltosActionPerformed(evt);
            }
        });

        jLabel2.setText("Servicios");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Listado de Aparatos");

        jtAparatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtAparatos);

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");

        jbBorrar.setText("Borrar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jbGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbBorrar)
                .addGap(45, 45, 45)
                .addComponent(jbCancelar)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrPendientes)
                                .addGap(78, 78, 78)
                                .addComponent(jrResueltos))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jcServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrPendientes)
                    .addComponent(jrResueltos))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar)
                    .addComponent(jbBorrar)
                    .addComponent(jbCancelar))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrPendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrPendientesActionPerformed
        // TODO add your handling code here:
        jrResueltos.setSelected(false);
        cargarAparatosPendientes();
    }//GEN-LAST:event_jrPendientesActionPerformed

    private void jrResueltosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrResueltosActionPerformed
        // TODO add your handling code here:
        jrPendientes.setSelected(false);
        cargarAparatosArreglados();
    }//GEN-LAST:event_jrResueltosActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jtAparatos.getSelectedRow();
        
        if (filaSeleccionada !=-1){
            Servicios s = (Servicios)jcServicios.getSelectedItem();
            int nroDeSerie=(Integer)modelo.getValueAt(filaSeleccionada, 0);
            Clientes dueño = (Clientes) modelo.getValueAt(filaSeleccionada, 1);
            String tipo=(String)modelo.getValueAt(filaSeleccionada, 2);
            LocalDate fechaI = (LocalDate) modelo.getValueAt(filaSeleccionada, 3);
            LocalDate fechaE = (LocalDate) modelo.getValueAt(filaSeleccionada, 4);
            Aparatos a = new Aparatos(nroDeSerie, dueño, tipo, fechaI, fechaE);
            Reparaciones repa = new Reparaciones(a, s, a.getFechaEgreso(), true);
            rd.guardarReparacion(repa);
            borrarFilas();
        }
    }//GEN-LAST:event_jbGuardarActionPerformed


    
    public void armarCabeceraTabla(){
        ArrayList<Object> columnas = new ArrayList<Object>();
         columnas.add("NroDeSerie");
         columnas.add("Dueño");
         columnas.add("TipoAparato");
         columnas.add("FechaIngreso");
         columnas.add("FechaEgreso");
         for(Object it: columnas){
             
             modelo.addColumn(it);
         }
         jtAparatos.setModel(modelo);
    
}
    public void borrarFilas(){
        int a = modelo.getRowCount() - 1;
        
        for(int i=a; i>=0; i--){
            modelo.removeRow(i);
        }
    }
    
    public void cargarAparatosArreglados(){
        borrarFilas();
        
        
        Servicios servicio = (Servicios)jcServicios.getSelectedItem();
        List<Aparatos> aparatos = rd.obtenerAparatosArreglados(servicio.getCodigo());
        
        for(Aparatos a: aparatos){
            modelo.addRow(new Object[]{a.getNroDeSerie(), a.getDueño(), a.getTipoAparato(), a.getFechaIngreso(), a.getFechaEgreso()});
        }
       
    }
    
    public void cargarAparatosPendientes(){
        borrarFilas();
        
        
        Servicios servicio = (Servicios)jcServicios.getSelectedItem();
        List<Aparatos> aparatos = rd.obtenerAparatosNOArreglados(servicio.getCodigo());
        
        for(Aparatos a: aparatos){
            modelo.addRow(new Object[]{a.getNroDeSerie(), a.getDueño().getIdCliente(), a.getTipoAparato(), a.getFechaIngreso(), a.getFechaEgreso()});
        }
       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JComboBox<Servicios> jcServicios;
    private javax.swing.JRadioButton jrPendientes;
    private javax.swing.JRadioButton jrResueltos;
    private javax.swing.JTable jtAparatos;
    // End of variables declaration//GEN-END:variables

}
